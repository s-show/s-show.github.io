<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Neovim on 閑古鳥ブログ</title>
    <link>http://localhost:1313/tags/neovim/</link>
    <description>Recent content in Neovim on 閑古鳥ブログ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>s-show 閑古鳥ブログ</copyright>
    <lastBuildDate>Fri, 27 Dec 2024 16:49:10 +0900</lastBuildDate><atom:link href="http://localhost:1313/tags/neovim/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Lazy.nvim でローカルにあるプラグインを読み込む方法</title>
      <link>http://localhost:1313/post/2024-12-27/</link>
      <pubDate>Fri, 27 Dec 2024 16:49:10 +0900</pubDate>
      
      <guid>http://localhost:1313/post/2024-12-27/</guid>
      <description>
        
          
            &lt;h2 id=&#34;前置き&#34;&gt;前置き&lt;/h2&gt;
&lt;p&gt;拙作のプラグインである &lt;a href=&#34;https://github.com/s-show/extend_word_motion.nvim&#34;&gt;extend_word_motion.nvim&lt;/a&gt; を開発するため、ローカルにあるプラグインを &lt;a href=&#34;https://lazy.folke.io/&#34;&gt;lazy.nvim&lt;/a&gt; で読み込む必要がありましたので、そのための設定を備忘録として残します。&lt;/p&gt;
&lt;h2 id=&#34;環境&#34;&gt;環境&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;❯ nvim --version
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;NVIM v0.10.2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;Build type: Release
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;LuaJIT 2.1.1713773202
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;Run &lt;span class=&#34;s2&#34;&gt;&amp;#34;nvim -V1 -v&amp;#34;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; more info
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;# lazy.nvim
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;version 11.16.2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;tag     v11.16.2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;branch  main
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;commit  7e6c863
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;~/.config/nvim
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;  ├── init.lua
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;  ├── lazy-lock.json
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;  ├── lua
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;  │  ├── config
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;  │  ├── plugins
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;  │  │  ├── ...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;  │  │  ├── extend_word_motion-nvim.lua
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;  │  │  └── ...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;  │  └── setting
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;必要な設定&#34;&gt;必要な設定&lt;/h2&gt;
&lt;p&gt;ローカルプラグインを読み込むための設定は、公式リファレンスの &lt;a href=&#34;https://lazy.folke.io/configuration&#34;&gt;configuration&lt;/a&gt; と &lt;a href=&#34;https://lazy.folke.io/spec/examples&#34;&gt;Examples&lt;/a&gt; で以下のとおり提示されています。それぞれの設定の説明は、コメントに書かれています。&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>日本語を分かち書きして Word Motion で移動できるようにしました</title>
      <link>http://localhost:1313/post/2024-12-16/</link>
      <pubDate>Mon, 16 Dec 2024 15:03:26 +0900</pubDate>
      
      <guid>http://localhost:1313/post/2024-12-16/</guid>
      <description>
        
          
            &lt;h2 id=&#34;前置き&#34;&gt;前置き&lt;/h2&gt;
&lt;p&gt;この記事はVim Advent Calendar 2024 の 16日目の記事です。本記事執筆時点で15日目の記事は登録されていないので、本記事の前の記事は、&lt;a href=&#34;https://zenn.dev/nil2&#34;&gt;nil2&lt;/a&gt; さんの &lt;a href=&#34;https://zenn.dev/nil2/articles/22a8960b84d46e&#34;&gt;Vimの:{range}!を通して任意の言語でテキストを処理する&lt;/a&gt; です。AWK でテキストを整形したりワンライナーのスクリプトのデバッグをするのに便利そうな手法ですね。&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>Neovim の Lua で文字列の長さを取得しようとしたら苦労した話</title>
      <link>http://localhost:1313/post/2024-12-14/</link>
      <pubDate>Sat, 14 Dec 2024 00:36:47 +0900</pubDate>
      
      <guid>http://localhost:1313/post/2024-12-14/</guid>
      <description>
        
          
            &lt;div class=&#34;alert alert_info&#34;&gt;
2024年12月15日追記あり
&lt;/div&gt;
&lt;h2 id=&#34;前置き&#34;&gt;前置き&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://zenn.dev/sirasagi62/articles/d654fbbf5039d6&#34;&gt;tinysegmenter.nvim&lt;/a&gt; という Lua で日本語の分かち書きを実現するソフトウェアが登場しましたので、これを利用して、Neovim の Word Motion をオーバーライドしようと思ったのですが、その処理で日本語を含む文字列の長さを取得する必要が生じました。&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>Neovim でコマンドの実行結果をバッファに出力する方法</title>
      <link>http://localhost:1313/post/2024-12-09/</link>
      <pubDate>Mon, 09 Dec 2024 00:00:00 +0900</pubDate>
      
      <guid>http://localhost:1313/post/2024-12-09/</guid>
      <description>
        
          
            &lt;h2 id=&#34;前置き&#34;&gt;前置き&lt;/h2&gt;
&lt;p&gt;Neovim でコマンドを実行したとき、実行結果が1行の文字列ならコマンドラインに結果が表示されるのですが、結果が Table 型だと &lt;code&gt;table 0x...&lt;/code&gt; と表示されて中身を確認できません。&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>Neovim &#43; ddu.vim で自動的にフィルタを開く方法</title>
      <link>http://localhost:1313/post/2024-11-24/</link>
      <pubDate>Sun, 24 Nov 2024 22:02:51 +0900</pubDate>
      
      <guid>http://localhost:1313/post/2024-11-24/</guid>
      <description>
        
          
            &lt;h2 id=&#34;前置き&#34;&gt;前置き&lt;/h2&gt;
&lt;p&gt;ddu.vim をファイラーやバッファの切り替えやヘルプの検索などに活用していますが、日々使っているとちょっとした不満も出てきます。&lt;/p&gt;
&lt;p&gt;どういう不満かと言いますと、&lt;code&gt;ddu#start()&lt;/code&gt; で表示したリストを絞り込むには、リスト表示後に &lt;code&gt;&amp;lt;Cmd&amp;gt;call ddu#ui#do_action(&amp;quot;openFilterWindow&amp;quot;)&amp;lt;CR&amp;gt;&lt;/code&gt; を実行してコマンドラインに移動する必要があるという点です。このコマンドを割り当てた &lt;code&gt;i&lt;/code&gt; をタイプすれば絞り込みを始められますが、ヘルプ検索のように絞り込み必須の場合、毎回毎回 &lt;code&gt;i&lt;/code&gt; をタイプするのが面倒だと感じていました。&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>Windows Terminal &#43; WSL2 &#43; Neovim で Autolist.nvim を使う場合のメモ</title>
      <link>http://localhost:1313/post/2024-11-07/</link>
      <pubDate>Thu, 07 Nov 2024 21:35:09 +0900</pubDate>
      
      <guid>http://localhost:1313/post/2024-11-07/</guid>
      <description>
        
          
            &lt;h2 id=&#34;問題の内容&#34;&gt;問題の内容&lt;/h2&gt;
&lt;p&gt;箇条書きの各行の末尾で改行したら自動的に &lt;code&gt;- &lt;/code&gt; を追加して欲しいので、&lt;code&gt;vim.keymap.set(&amp;quot;i&amp;quot;, &amp;quot;&amp;lt;S-CR&amp;gt;&amp;quot;, &amp;quot;&amp;lt;CR&amp;gt;&amp;lt;cmd&amp;gt;AutolistNewBullet&amp;lt;cr&amp;gt;&amp;quot;)&lt;/code&gt; というキーバインドを設定しましたが、&lt;code&gt;Shift-Enter&lt;/code&gt; をタイプしても単なる改行になっていました。&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>Neovim の LSP 設定を見直してエラー表示を解消した話</title>
      <link>http://localhost:1313/post/2024-10-15/</link>
      <pubDate>Mon, 14 Oct 2024 18:04:45 +0900</pubDate>
      
      <guid>http://localhost:1313/post/2024-10-15/</guid>
      <description>
        
          
            &lt;h2 id=&#34;前置き&#34;&gt;前置き&lt;/h2&gt;
&lt;p&gt;Neovim で C言語の LSP を設定した上で自作キーボードのファームウェアの QMK Firmware（大半のコードがC言語） を編集しているのですが、下のスクリーンショットのとおり大量の &amp;quot;unknown type name&amp;quot; とか &amp;quot;call to undeclare&amp;quot; エラー表示が出ていました。&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>Lua で ddu.vim のカスタムアクションを実装する</title>
      <link>http://localhost:1313/post/2024-08-26/</link>
      <pubDate>Sun, 25 Aug 2024 16:18:23 +0900</pubDate>
      
      <guid>http://localhost:1313/post/2024-08-26/</guid>
      <description>
        
          
            &lt;h2 id=&#34;前置き&#34;&gt;前置き&lt;/h2&gt;
&lt;p&gt;Neovim のプラグインの &lt;a href=&#34;https://github.com/Shougo/ddu.vim&#34;&gt;ddu.vim&lt;/a&gt; を導入してバッファ切り替えやコマンド履歴からのコマンド実行やファイラーとして便利に使っているのですが、&lt;a href=&#34;https://zenn.dev/kamecha/articles/18d244603c85fd&#34;&gt;ddu.vimのアクション周りを便利にしよう&lt;/a&gt; という記事を見てカスタムアクションを導入したいと思いました。&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>Neovim で skkeleton を使う方法</title>
      <link>http://localhost:1313/post/2024-06-30/</link>
      <pubDate>Sat, 29 Jun 2024 23:05:17 +0900</pubDate>
      
      <guid>http://localhost:1313/post/2024-06-30/</guid>
      <description>
        
          
            &lt;h2 id=&#34;前置き&#34;&gt;前置き&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://kankodori-blog.com/posts/2024-06-29/&#34;&gt;この記事&lt;/a&gt;に続く Neovim の設定に関する記事です。今回は、Vim/Neovim 専用の日本語入力プラグインである &lt;a href=&#34;https://github.com/vim-skk/skkeleton&#34;&gt;vim-skk/skkeleton: SKK implements for Vim/Neovim with denops.vim&lt;/a&gt; の設定に関する情報を備忘録としてまとめます。&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>Neovim のヘルプを日本語化する</title>
      <link>http://localhost:1313/post/2024-06-29/</link>
      <pubDate>Sat, 29 Jun 2024 01:51:48 +0900</pubDate>
      
      <guid>http://localhost:1313/post/2024-06-29/</guid>
      <description>
        
          
            &lt;h2 id=&#34;前置き&#34;&gt;前置き&lt;/h2&gt;
&lt;p&gt;私のエディタ遍歴（というほどでもないですが）は、Sublime Text、Atom、Vim、VSCode という感じで、最近は VSCode を使っていました。&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>Neovim の設定集（2022年12月30時点）</title>
      <link>http://localhost:1313/post/2022-12-30/</link>
      <pubDate>Fri, 30 Dec 2022 16:48:00 +0900</pubDate>
      
      <guid>http://localhost:1313/post/2022-12-30/</guid>
      <description>
        
          
            &lt;div class=&#34;page-toc&#34;&gt;
  &lt;details class=&#34;&#34;&gt;
    &lt;summary&gt;目次&lt;/summary&gt;
    &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#前置き&#34;&gt;前置き&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#アウトラインバッファの作成&#34;&gt;アウトラインバッファの作成&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#2022年1月10日追記&#34;&gt;2022年1月10日追記&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#日本語テキストでの移動の効率化&#34;&gt;日本語テキストでの移動の効率化&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#dduvim-の導入&#34;&gt;ddu.vim の導入&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#ddcvim-の導入&#34;&gt;ddc.vim の導入&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#lualinenvim-の導入&#34;&gt;lualine.nvim の導入&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#キーバインド変更&#34;&gt;キーバインド変更&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#設定ファイル分割&#34;&gt;設定ファイル分割&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#reviewのシンタックスハイライト&#34;&gt;Re:VIEWのシンタックスハイライト&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#noicenvim-の導入&#34;&gt;noice.nvim の導入&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#導入したものの廃止したもの&#34;&gt;導入したものの廃止したもの&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#fine-cmdlinenvim&#34;&gt;fine-cmdline.nvim&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#参考にしたサイト情報&#34;&gt;参考にしたサイト・情報&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
  &lt;/details&gt;
&lt;/div&gt;
&lt;h2 id=&#34;前置き&#34;&gt;前置き&lt;/h2&gt;
&lt;p&gt;WSL2 + Neovim + VSCode で使っていく予定だったのですが、Neovim をあれこれカスタマイズしていると Neovim が使いやすくなってきてメインエディタになりそうなので、これまでの設定をまとめてみようと思います。&lt;/p&gt;
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
